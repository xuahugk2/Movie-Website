@using System.Web.Mvc;
@{
    ViewBag.Title = "Room";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .chat-view {
        margin-top: 50px;
        width: 60%;
        height: 300px;
        background-color: #e9ecef;
        overflow: scroll;
    }

    #message {
        width: inherit;
    }

    #sendmessage {
        background-color: #14f88e;
        border: 1px solid;
        outline: none;
        padding: 2px 15px;
        border-radius: 8px;
    }
</style>
<div>
    <h1>Phòng Livestream</h1>
    @*<div>
        <h1>Agent Name</h1>
        <input type="text" id="agentName" />
    </div>*@
    <input id="startCast" type="button" value="Start Casting">
    <input id="stopCast" type="button" value="Stop Casting">
    <canvas id='screenCanvas'></canvas>
</div>
<div class="container">
    <div class="chat-view">
        <ul id="discussion"></ul>
    </div>
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Gửi" />
    <input type="hidden" id="displayname" value="@Session["userName"]" />

</div>


@section scripts {
    <!--SignalR Share Screen Js-->
    <script>
        require('./renderer.js')
        require('./signalr.js')
    </script>
    <script src="~/Shared/js/ShareScreen.js"></script>
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
    <script src="~/Shared/js/room.js"></script>
    <!--SignalR Chat Js-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            if (!$('#displayname').val()) {
                $('#displayname').val(prompt('Enter your name:', ''));
            }
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
